---
name: "rstudio-mds-infra"
on:
  push:
    branches: ["dev"]
jobs:
  build:
    runs-on: "${{ matrix.os }}"
    permissions:
      contents: write
      packages: write
      id-token: write
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.EXOSCALE_API_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.EXOSCALE_SECRET_KEY }}
      EXOSCALE_API_KEY: ${{ secrets.EXOSCALE_API_KEY }}
      EXOSCALE_SECRET_KEY: ${{ secrets.EXOSCALE_SECRET_KEY }}
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
      TFSEC_VERSION: v1.28.1
    strategy:
      matrix:
        os: ["ubuntu-22.04"]
        terraform: ["1.4.5"]
    steps:
      - name: "Checkout repository..."
        uses: "actions/checkout@v3"
      - name: "Install tfsec..."
        shell: bash
        run: |
          cd /usr/local/bin && \
          curl --location --output tfsec "https://github.com/aquasecurity/tfsec/releases/download/${TFSEC_VERSION}/tfsec-linux-amd64" && \
          chmod +x tfsec
      - name: "Terraform code security scan..."
        shell: bash
        run: |
          tfsec .
      - name: "Setup terraform..."
        uses: "hashicorp/setup-terraform@v2"
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - name: "Terraform initialization..."
        run: terraform init
        continue-on-error: false
      - name: "Terraform files validation..."
        run: terraform validate -no-color
        continue-on-error: false
      - name: "Terraform plan generation..."
        run: terraform plan -no-color
        continue-on-error: false
      - name: "Terraform plan apply..."
        run: terraform apply -no-color -auto-approve
        continue-on-error: false
